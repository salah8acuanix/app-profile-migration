/**
 * Copyright (c) Acuanix Co.
 * @Author: Sayed Taha.
 * @Date: 18/11/2020
 */
package com.airgap.approfiling.dto;

import com.airgap.approfiling.model.RecoveryInfrastructure;
import com.airgap.approfiling.model.RecoveryInfrastructureClient;
import com.airgap.common.dto.BaseDto;
import com.airgap.common.error.AbstractAirgapException;
import com.fasterxml.jackson.annotation.JsonIgnore;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RecoveryInfrastructureDto extends BaseDto implements Serializable {
	private static final long serialVersionUID = 1L;
	private String name;
	private String password;
	private String recoveryHost;
	private String type;
	private String url;
	private String userName;
	private String version;
	private String siteName;
	@JsonIgnore
	private String token;




	public List<RecoveryInfrastructureClientDto> getRecoveryInfrastructureClients() {
		return recoveryInfrastructureClients;
	}

	public void setRecoveryInfrastructureClients(List<RecoveryInfrastructureClientDto> recoveryInfrastructureClients) {
		this.recoveryInfrastructureClients = recoveryInfrastructureClients;
	}

	private Integer site;
	private List<RecoveryInfrastructureClientDto> recoveryInfrastructureClients;
	public Integer getSite() {
		return site;
	}

	public void setSite(Integer site) {
		this.site = site;
	}

	public RecoveryInfrastructureDto() {
	}

	public String getSiteName() {
		return siteName;
	}

	public void setSiteName(String siteName) {
		this.siteName = siteName;
	}

	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getRecoveryHost() {
		return this.recoveryHost;
	}

	public void setRecoveryHost(String recoveryHost) {
		this.recoveryHost = recoveryHost;
	}

	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getVersion() {
		return this.version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public RecoveryInfrastructure toEntity() {
		RecoveryInfrastructure entity = null;
		try{
			entity = new RecoveryInfrastructure();
			entity.setId(id);
			entity.setSite(site);
			entity.setCreatedBy(createdBy);
			entity.setCreatedOn(createdOn);
			entity.setModifiedBy(modifiedBy);
			entity.setModifiedOn(modifiedOn);
			entity.setName(name);
			entity.setPassword(password);
			entity.setRecoveryHost(recoveryHost);
			entity.setType(type);
			entity.setUrl(url);
			entity.setVersion(version);
			entity.setUserName(userName);
			if(recoveryInfrastructureClients != null && !recoveryInfrastructureClients.isEmpty()){
				entity.setRecoveryInfrastructureClients(new ArrayList<>());
				RecoveryInfrastructureClient tmp = null;
				for(RecoveryInfrastructureClientDto cli : recoveryInfrastructureClients) {
					tmp = cli.toEntity();
					tmp.setRecoveryInfrastructure(entity );
					entity.getRecoveryInfrastructureClients().add(tmp);
				}
			}
		}catch (Exception e){
			e.printStackTrace();
			throw new AbstractAirgapException(e.getMessage());
		}
		return  entity;
	}
}