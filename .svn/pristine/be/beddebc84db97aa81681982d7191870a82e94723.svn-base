package com.airgap.approfiling.dao;


import com.airgap.approfiling.model.TestClientImport;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import javax.transaction.Transactional;
import java.util.List;
import java.util.Optional;

@Repository
public interface TestClientImportRepository extends CrudRepository<TestClientImport,Integer> {

    Iterable<TestClientImport> findAllByActive(Integer active);

    @Transactional
    @Modifying
    @Query(value="update test_client_import set status =:status where backup_server =:backup_server", nativeQuery = true)
    void updateRecoveryImportJobStatus(@Param("backup_server") Integer id, @Param("status")Integer status);

    @Transactional
    @Modifying
    @Query(value="update test_client_import set active = :status where backup_server = :backupServer", nativeQuery = true)
    void activateOrDeactivate(Integer backupServer, Integer status);


    @Transactional
    @Modifying
    @Query(value="update test_client_import set trained =:trainFlag where backup_server =:backupServer", nativeQuery = true)
    void updateRecoveryImportJobTrained(@Param("backupServer") Integer id, @Param("trainFlag")Integer trainFlag);

    Optional<TestClientImport> findByBackupServer(Integer serverId);


    List<TestClientImport> findAllByScheduledTask(Integer sceduledTaskId);

    List<TestClientImport> findAllByTest(int i);

    Optional<TestClientImport> findByBackupServerAndTest(Integer serverId, Integer test);

    void deleteByBackupServer(Integer backupServer);
}
